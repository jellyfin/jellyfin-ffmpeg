name: 'ðŸš€ Build and Publish jellyfin-ffmpeg'

on:
  release:
    types:
      - released

jobs:
  build_publish_debian:
    uses: ./.github/workflows/_meta.yaml
    with:
      distro: 'debian'
      codenames: '["bullseye", "bookworm"]'
      architectures: '["amd64", "arm64", "armhf"]'
      release: true
    secrets:
      deploy-host: ${{ secrets.REPO_HOST }}
      deploy-user: ${{ secrets.REPO_USER }}
      deploy-key: ${{ secrets.REPO_KEY }}

  build_publish_ubuntu:
    uses: ./.github/workflows/_meta.yaml
    with:
      distro: 'ubuntu'
      codenames: '["focal", "jammy", "noble"]'
      architectures: '["amd64", "arm64", "armhf"]'
      release: true
    secrets:
      deploy-host: ${{ secrets.REPO_HOST }}
      deploy-user: ${{ secrets.REPO_USER }}
      deploy-key: ${{ secrets.REPO_KEY }}

  build_publish_windows_portable:
    uses: ./.github/workflows/_meta_portable.yaml
    with:
      os: 'windows'
      architectures: '["win64"]'
      release: true
    secrets:
      deploy-host: ${{ secrets.REPO_HOST }}
      deploy-user: ${{ secrets.REPO_USER }}
      deploy-key: ${{ secrets.REPO_KEY }}

  build_publish_linux_portable:
    uses: ./.github/workflows/_meta_portable.yaml
    with:
      os: 'linux'
      architectures: '["amd64", "arm64"]'
      release: true
    secrets:
      deploy-host: ${{ secrets.REPO_HOST }}
      deploy-user: ${{ secrets.REPO_USER }}
      deploy-key: ${{ secrets.REPO_KEY }}

  build_publish_mac_portable:
      uses: ./.github/workflows/_meta_mac_portable.yaml
      with:
        release: true
      secrets:
        deploy-host: ${{ secrets.REPO_HOST }}
        deploy-user: ${{ secrets.REPO_USER }}
        deploy-key: ${{ secrets.REPO_KEY }}

  maintain_repository:
    name: Maintain Repository
    runs-on: ubuntu-latest
    needs:
      - build_publish_debian
      - build_publish_ubuntu
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        arrays: [
          {distro: 'debian', codename: 'bullseye'},
          {distro: 'debian', codename: 'bookworm'},
          {distro: 'ubuntu', codename: 'focal'},
          {distro: 'ubuntu', codename: 'jammy'},
          {distro: 'ubuntu', codename: 'noble'}
        ]
    steps:
      - name: Import packages into reprepro
        uses: appleboy/ssh-action@6f091cd9e3c1cd80aaae26c3ff9d628b8b1e8905 # v0.0.5
        with:
          host: ${{ secrets.REPO_HOST }}
          username: ${{ secrets.REPO_USER }}
          key: ${{ secrets.REPO_KEY }}
          script_stop: true
          script: |-
            set -o errexit
            set -o xtrace
            tag="${{ github.event.release.tag_name }}"
            version="${tag#v}"
            major_version="${version%%.*}"
            basename="jellyfin-ffmpeg*_${version}-${{ matrix.arrays.codename }}"
            basedir="/srv/repository/main/ffmpeg/${{ matrix.arrays.distro }}/${major_version}.x/${version}"
            find ${basedir} -type f -name "${basename}_*.deb" | while read file; do
                sudo reprepro -b /srv/${{ matrix.arrays.distro }} --export=never --keepunreferencedfiles includedeb ${{ matrix.arrays.codename }} ${file}
            done
            sudo reprepro -b /srv/${{ matrix.arrays.distro }} deleteunreferenced
            sudo reprepro -b /srv/${{ matrix.arrays.distro }} export
