FROM DISTRO

# Docker build arguments
ARG SOURCE_DIR=/ffmpeg
ARG ARTIFACT_DIR=/dist

# Docker run environment
ENV DEBIAN_FRONTEND=noninteractive \
    SOURCE_DIR=/ffmpeg \
    ARTIFACT_DIR=/dist \
    DEB_BUILD_OPTIONS=noddebs \
    ARCH=BUILD_ARCHITECTURE \
    GCC_VER=GCC_RELEASE_VERSION \
    LLVM_VER=LLVM_RELEASE_VERSION \
    TARGET_DIR=/usr/lib/jellyfin-ffmpeg \
    DPKG_INSTALL_LIST=${SOURCE_DIR}/debian/jellyfin-ffmpeg6.install \
    PATH=${TARGET_DIR}/bin:${PATH} \
    PKG_CONFIG_PATH=${TARGET_DIR}/lib/pkgconfig:${PKG_CONFIG_PATH} \
    CFLAGS="-I${TARGET_DIR}/include $CFLAGS" \
    CPPFLAGS="-I${TARGET_DIR}/include $CPPFLAGS" \
    CXXFLAGS="-I${TARGET_DIR}/include $CXXFLAGS" \
    LDFLAGS="-Wl,-rpath=${TARGET_DIR}/lib -L${TARGET_DIR}/lib" \
    LD_LIBRARY_PATH=${TARGET_DIR}/lib:${TARGET_DIR}/lib/mfx:${TARGET_DIR}/lib/xorg:${LD_LIBRARY_PATH}

# Prepare Debian build environment
RUN apt-get update \
  && apt-get upgrade -y \
  && apt-get install --no-install-recommends -y \
     curl ninja-build debhelper gnupg wget devscripts \ 
     mmv equivs git nasm pkg-config subversion dh-autoreconf \
     libpciaccess-dev libwayland-dev libx11-dev libx11-xcb-dev \
     libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev \
     libxcb-shm0-dev libxcb-sync-dev libxshmfence-dev libxext-dev \ 
     libxfixes-dev libxcb1-dev libxrandr-dev libzstd-dev \ 
     libelf-dev python3-pip zip unzip tar flex bison \
  && apt-get clean autoclean -y \
  && apt-get autoremove -y \
  && rm -rf /var/lib/apt/lists/*

# Install newer tools from pip3
RUN pip3 install $(pip3 help install | grep -o "\-\-break-system-packages") --upgrade pip \
  && pip3 install $(pip3 help install | grep -o "\-\-break-system-packages") meson cmake mako jinja2

# Avoids timeouts when using git and disable the detachedHead advice
RUN git config --global http.postbuffer 524288000 \
  && git config --global advice.detachedHead false

# Link to docker-build script
RUN ln -sf ${SOURCE_DIR}/docker-build.sh /docker-build.sh

VOLUME ${ARTIFACT_DIR}/

COPY . ${SOURCE_DIR}/

ENTRYPOINT ["/docker-build.sh"]
